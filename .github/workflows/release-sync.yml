name: PR sync between release1.3 and release1.4

on:
  pull_request_target:
    types: [closed]
    branches:
      - "release1.3"

# Explicit permissions for GITHUB_TOKEN
permissions:
  contents: write      # Push to branches
  pull-requests: write # Comment on PRs  
  issues: write       # Create issues on conflicts

jobs:
  sync-pr-changes:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Sync PR changes to release1.4
        id: sync
        run: |
          set +e  # Continue on errors
          
          PR_NUMBER=${{ github.event.pull_request.number }}
          SOURCE_BRANCH="release1.3"
          TARGET_BRANCH="release1.4"
          
          # Switch to target branch
          git checkout $TARGET_BRANCH
          git pull origin $TARGET_BRANCH
          
          # Switch to the source branch to find commits
          git checkout $SOURCE_BRANCH
          git pull origin $SOURCE_BRANCH
          
          # Find PR number
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          # Try to find any commit with the PR number
          COMMITS_TO_PICK=$(git log --grep="#${PR_NUMBER}" --format="%H" --reverse)

          if [ -n "$COMMITS_TO_PICK" ]; then
            git checkout "$TARGET_BRANCH"
            
            for commit in $COMMITS_TO_PICK; do
              echo "Cherry-picking: $commit"
              if ! git cherry-pick "$commit"; then
                echo "Conflict - aborting"
                git cherry-pick --abort  
                exit 1
              fi
            done
            
            git push origin "$TARGET_BRANCH"
            echo "Success!"
          else
            echo "❌ No commits found for PR #${PR_NUMBER}"
            exit 1
          fi
      
      - name: Handle conflicts
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Sync conflict: PR #${{ github.event.pull_request.number }} (release1.3 → release1.4)`,
              body: `
                **Automatic sync failed due to conflicts**
                
                PR #${{ github.event.pull_request.number }} was merged to \`release1.3\`, but conflicts occurred while syncing to \`release1.4\`.
                
                **PR Details:**
                - Title: "${{ github.event.pull_request.title }}"
                - Author: @${{ github.event.pull_request.user.login }}
                - URL: ${{ github.event.pull_request.html_url }}
              `,
              labels: ['sync-conflict', 'release-management'],
              assignees: ['${{ github.event.pull_request.user.login }}']
            })
      
      - name: Success notification
        if: steps.sync.outputs.success == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `✅ **Auto-sync successful!** 
              
              Changes from this PR have been automatically synced to \`release1.4\` branch using cherry-pick.
              
              **Sync details:**
              - Source: \`release1.3\`  
              - Target: \`release1.4\`
              - Method: Cherry-pick of PR commits`
            })
      
      