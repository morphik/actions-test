name: PR sync between release1.3 and release1.4

on:
  pull_request_target:
    types:
      - closed
    branches:
      - release1.3

jobs:
  sync-pr-changes:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Sync PR changes to release1.4
        id: sync
        run: |
          set +e  # Continue on errors
          
          PR_NUMBER=${{ github.event.pull_request.number }}
          SOURCE_BRANCH="release1.3"
          TARGET_BRANCH="release1.4"
          
          # Switch to target branch
          git checkout $TARGET_BRANCH
          git pull origin $TARGET_BRANCH
          
          # Switch to the source branch to find commits
          git checkout $SOURCE_BRANCH
          git pull origin $SOURCE_BRANCH
          
          # Find merge commit (for merge commits)
          MERGE_COMMIT=$(git log --merges --grep="#${PR_NUMBER}" --oneline -n 1 --format="%H")
          
          if [ -n "$MERGE_COMMIT" ]; then
            echo "Found merge commit: $MERGE_COMMIT"
            PARENT1=$(git rev-parse ${MERGE_COMMIT}^1)
            PARENT2=$(git rev-parse ${MERGE_COMMIT}^2)
            
            git checkout $TARGET_BRANCH
            git log --reverse --pretty=format:"%H" ${PARENT1}..${PARENT2} | while read commit; do
              echo "Cherry-picking: $commit"
              if ! git cherry-pick $commit; then
                echo "Conflict at commit: $commit"
                exit 1
              fi
            done
          fi
          
          git push origin $TARGET_BRANCH
          echo "success=true" >> $GITHUB_OUTPUT
      
      - name: Handle conflicts
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Merge conflict while merging PR #${{ github.event.pull_request.number }}`,
              body: `
                **Automatic PR synchronization failed**
                
                PR #${{ github.event.pull_request.number }} was merged into \`release1.3\`, but there were merge conflicts while merging changes into \`release1.4\`.
                
                **PR Details:**
                - Title: "${{ github.event.pull_request.title }}"
                - Author: @${{ github.event.pull_request.user.login }}
                - Link: ${{ github.event.pull_request.html_url }}
              `,
              labels: ['sync-conflict', 'needs-manual-intervention'],
              assignees: ['${{ github.event.pull_request.user.login }}']
            })
      
      - name: Success notification
        if: steps.sync.outputs.success == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Changes from this PR were successfully cherry-picked into \`release1.4\` branch
              
              **Synced commits:**`
            })
